// Package assemblers
// Code generated by ikaiguang. <https://github.com/ikaiguang>
package assemblers

import (
	snowflakev1 "github.com/ikaiguang/go-snowflake-node-id/api/snowflake-service/v1/resources"
	entities "github.com/ikaiguang/go-snowflake-node-id/internal/domain/snowflake/entity"
	timeutil "github.com/ikaiguang/go-srv-kit/kit/time"
)

var _ = timeutil.YmdHms

// AssembleListSnowflakeWorker assemble listSnowflakeWorker
func AssembleListSnowflakeWorker(dataModels []*entities.SnowflakeWorker) []*snowflakev1.SnowflakeWorker {
	var newDataModels = make([]*snowflakev1.SnowflakeWorker, len(dataModels))
	for index := range dataModels {
		newDataModels[index] = AssembleSnowflakeWorker(dataModels[index])
	}
	return newDataModels
}

// AssembleSnowflakeWorker assemble SnowflakeWorker
func AssembleSnowflakeWorker(dataModel *entities.SnowflakeWorker) *snowflakev1.SnowflakeWorker {
	newDataModel := &snowflakev1.SnowflakeWorker{
		Id:                   dataModel.Id,                                         // id
		InstanceExtendTime:   dataModel.InstanceExtendTime.Format(timeutil.YmdHms), // 实例续期时间
		InstanceId:           dataModel.InstanceId,                                 // 实例ID
		NodeId:               dataModel.SnowflakeNodeId,                            // 雪花算法节点id
		InstanceName:         dataModel.InstanceName,                               // 实例名称
		InstanceEndpointList: dataModel.InstanceEndpointList,                       // 实例端点数组
		InstanceMetadata:     dataModel.InstanceMetadata,                           // 实例元数据
	}
	return newDataModel
}
